(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{162:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"webpack4-笔记"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack4-笔记","aria-hidden":"true"}},[t._v("#")]),t._v(" webpack4 笔记")]),t._v(" "),a("h2",{attrs:{id:"模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模式","aria-hidden":"true"}},[t._v("#")]),t._v(" 模式")]),t._v(" "),a("p",[a("code",[t._v("development")]),t._v(" 模式下，默认开启了 "),a("code",[t._v("NamedChunksPlugin")]),t._v(" 和 "),a("code",[t._v("NamedModulesPlugin")]),t._v("。提供了更完整的错误信息。")]),t._v(" "),a("p",[a("code",[t._v("production")]),t._v(" 模式下，代码会自动分割、压缩，同时也会 "),a("code",[t._v("scope hoisting")]),t._v(" 和 "),a("code",[t._v("tree-shaking")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"默认分包策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#默认分包策略","aria-hidden":"true"}},[t._v("#")]),t._v(" 默认分包策略")]),t._v(" "),a("p",[t._v("webpack 4 最大的改动就是废除了 "),a("code",[t._v("CommonsChunkPlugin")]),t._v(" 引入了 "),a("code",[t._v("optimization.splitChunks")]),t._v("。")]),t._v(" "),a("p",[t._v("它的默认分割策略如下：")]),t._v(" "),a("ul",[a("li",[t._v("新的 chunk 是否被共享或者是来自 node_modules 的模块")]),t._v(" "),a("li",[t._v("新的 chunk 体积在压缩之前是否大于 30kb")]),t._v(" "),a("li",[t._v("按需加载 chunk 的并发请求数量小于等于 5 个")]),t._v(" "),a("li",[t._v("页面初始加载时的并发请求数量小于等于 3 个")])]),t._v(" "),a("p",[a("strong",[t._v("不同的业务，优化的侧重点是不同的。")])]),t._v(" "),a("h2",{attrs:{id:"优化分包策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优化分包策略","aria-hidden":"true"}},[t._v("#")]),t._v(" 优化分包策略")]),t._v(" "),a("p",[t._v("以后台管理系统为例，可以按照体积大小、共用率、更新频率重新划分包，使其尽可能的利用浏览器缓存。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("共用率")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("使用频率")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("更新频率")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("例子")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("基础类库")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("高")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("高")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("低")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("vue,axios")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("ui 组件库")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("高")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("高")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("中")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("element-ui")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("必要组件/函数")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("高")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("高")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("中")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Header 组件,utils 函数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("低频组件")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("低")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("低")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("低")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("富文本,echarts")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("业务代码")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("低")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("高")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("高")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("业务页面")])])])]),t._v(" "),a("h3",{attrs:{id:"基础类库-chunk-libs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础类库-chunk-libs","aria-hidden":"true"}},[t._v("#")]),t._v(" 基础类库 chunk-libs")]),t._v(" "),a("p",[t._v("升级频率都不高，但每个页面都需要它们。")]),t._v(" "),a("h3",{attrs:{id:"ui-组件库-chunk-ui"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ui-组件库-chunk-ui","aria-hidden":"true"}},[t._v("#")]),t._v(" ui 组件库 chunk-ui")]),t._v(" "),a("p",[t._v("比较大，并且不时的会升级 UI 组件库。")]),t._v(" "),a("h3",{attrs:{id:"自定义组件-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义组件-函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 自定义组件/函数")]),t._v(" "),a("ul",[a("li",[t._v("必要：比如路由表、全局 state、全局侧边栏/Header/Footer 等组件，即入口文件中依赖的东西。都会默认打包到 app.js 中。")]),t._v(" "),a("li",[t._v("非必要：被大部分页面使用，但在入口文件 entry 中未被引入的模块。比如封装的 select 或者 table 组件。有十个页面引用了它，就会包重复打包十次。所以应该将那些被大量共用的组件单独打包成 chunk-commons")])]),t._v(" "),a("h3",{attrs:{id:"低频组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#低频组件","aria-hidden":"true"}},[t._v("#")]),t._v(" 低频组件")]),t._v(" "),a("p",[t._v("只会在一些特定业务场景下使用。大于 30kb 时，webpack 4 会默认打包成一个独立的 bundle。也无需特别处理。小于 30kb 的情况下会被打包到具体使用它的页面 bundle 中。")]),t._v(" "),a("h3",{attrs:{id:"业务代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#业务代码","aria-hidden":"true"}},[t._v("#")]),t._v(" 业务代码")]),t._v(" "),a("p",[t._v("一般都是按照页面的划分来打包。")]),t._v(" "),a("p",[a("strong",[t._v("配置")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("splitChunks"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  chunks"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"all"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  cacheGroups"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    libs"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      name"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"chunk-libs"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      test"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token regex"}},[t._v("/[\\\\/]node_modules[\\\\/]/")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      priority"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("10")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      chunks"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"initial"')]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 只打包初始时依赖的第三方")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    elementUI"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      name"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"chunk-elementUI"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 单独将 elementUI 拆包")]),t._v("\n      priority"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("20")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 权重要大于 libs 和 app 不然会被打包进 libs 或者 app")]),t._v("\n      test"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token regex"}},[t._v("/[\\\\/]node_modules[\\\\/]element-ui[\\\\/]/")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    commons"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      name"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"chunk-commons"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      test"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("resolve")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"src/components"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 可自定义拓展你的规则")]),t._v("\n      minChunks"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 最小共用次数")]),t._v("\n      priority"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("5")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      reuseExistingChunk"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"mini-css-extract-plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mini-css-extract-plugin","aria-hidden":"true"}},[t._v("#")]),t._v(" mini-css-extract-plugin")]),t._v(" "),a("p",[t._v("用于提取 css，并且在代码分割时会将原来内联写在每个 js chunk 中的 css 单独拆成一个个 css 文件。")]),t._v(" "),a("p",[t._v("它并没有帮我们做代码压缩，这时候需要使用 "),a("code",[t._v("optimize-css-assets-webpack-plugin")]),t._v(" 这个插件。")]),t._v(" "),a("h2",{attrs:{id:"几种-hash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#几种-hash","aria-hidden":"true"}},[t._v("#")]),t._v(" 几种 hash")]),t._v(" "),a("ul",[a("li",[t._v("hash：和每次 "),a("code",[t._v("build")]),t._v(" 有关，没有任何改变的情况下，每次编译出来的 "),a("code",[t._v("hash")]),t._v(" 都是一样的，但改变了一点东西，它的 "),a("code",[t._v("hash")]),t._v(" 就会发生改变。")]),t._v(" "),a("li",[t._v("chunkhash：根据具体每个模块文件自己的内容包括它的依赖计算所得的，所以某个文件的改动只会影响它所在 chunk 的 hash。")]),t._v(" "),a("li",[t._v("contenthash：它的出现主要是为了解决，让 css 文件不受 js 文件的影响。比如 foo.css 被 foo.js 引用了，所以它们共用相同的 chunkhash 值。但这样子是有问题的，如果 foo.js 修改了代码，css 文件就算内容没有任何改变，由于是该模块的 hash 发生了改变，其 css 文件的 hash 也会随之改变。\ncontenthash 保证即使 css 文件所处的模块里有任何内容的改变，只要 css 文件内容不变，那么它的 hash 就不会发生变化。"),a("strong",[t._v("可以简单理解为是 moduleId + content 所生成的 hash。")])])]),t._v(" "),a("h2",{attrs:{id:"runtimechunk-manifest"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#runtimechunk-manifest","aria-hidden":"true"}},[t._v("#")]),t._v(" RuntimeChunk(manifest)")]),t._v(" "),a("p",[t._v("webpack 4 提供了 runtimeChunk 能让我们方便的提取 manifest。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  runtimeChunk"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("它的作用是将包含 chunks 映射关系的 list 单独从 app.js 里提取出来，因为每一个 chunk 的 id 基本都是基于内容 hash 出来的，所以你每次改动都会影响它，如果不将它提取出来的话，等于 app.js 每次都会改变。缓存就失效了。")]),t._v(" "),a("p",[t._v("其实打包生成的 runtime.js 非常的小。所以建议不要将它单独拆包，而是将它内联到 index.html 之中(index.html 本来每次打包都会变)。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ScriptExtHtmlWebpackPlugin "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("require")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'script-ext-html-webpack-plugin'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 注意一定要在HtmlWebpackPlugin之后引用")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// inline 的 name 和你 runtimeChunk 的 name 保持一致")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("ScriptExtHtmlWebpackPlugin")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v("//`runtime` must same as runtimeChunk name. default is `runtime`")]),t._v("\n  inline"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token regex"}},[t._v("/runtime\\..*\\.js$/")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"module-vs-chunk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#module-vs-chunk","aria-hidden":"true"}},[t._v("#")]),t._v(" Module vs Chunk")]),t._v(" "),a("ul",[a("li",[t._v("chunk：是指代码中引用的文件（如：js、css、图片等）会根据配置合并为一个或多个包，我们称一个包为 chunk。")]),t._v(" "),a("li",[t._v("module：是指将代码按照功能拆分，分解成离散功能块。拆分后的代码块就叫做 module。可以简单的理解为一个 export/import 就是一个 module。")])]),t._v(" "),a("p",[t._v("webpack 内部维护了一个自增的 id，每个 module 都有一个 id。所以当增加或者删除 module 的时候，id 就会变化，导致其它文件虽然没有变化，但由于 id 被强占，只能自增或者自减，导致整个 id 的顺序都错乱了。")]),t._v(" "),a("p",[a("strong",[t._v("每个 chunk 包可含多个 module。")])]),t._v(" "),a("h2",{attrs:{id:"持久化缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#持久化缓存","aria-hidden":"true"}},[t._v("#")]),t._v(" 持久化缓存")]),t._v(" "),a("p",[t._v("moduleId 顺序的错乱会导致所有 chunk 内容的变化。从而让 chunk 的缓存都失效。")]),t._v(" "),a("p",[t._v("解决方案：")]),t._v(" "),a("ul",[a("li",[t._v("内联 manifest")]),t._v(" "),a("li",[t._v("使用 "),a("code",[t._v("HashedModuleIdsPlugin")]),t._v(" 固定 "),a("code",[t._v("moduleId")])]),t._v(" "),a("li",[t._v("使用 "),a("code",[t._v("NamedChunkPlugin")]),t._v(" 结合自定义 nameResolver 来固定 "),a("code",[t._v("chunkId")])])]),t._v(" "),a("h2",{attrs:{id:"speed-measure-webpack-plugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#speed-measure-webpack-plugin","aria-hidden":"true"}},[t._v("#")]),t._v(" speed-measure-webpack-plugin")]),t._v(" "),a("p",[t._v("可以监控每步操作耗时的插件。")]),t._v(" "),a("h2",{attrs:{id:"tree-shaking"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tree-shaking","aria-hidden":"true"}},[t._v("#")]),t._v(" Tree-Shaking")]),t._v(" "),a("p",[t._v("这个功能是基于 "),a("code",[t._v("ES6 modules")]),t._v(" 的静态特性检测。")]),t._v(" "),a("p",[t._v("ES6 module 特点：")]),t._v(" "),a("ul",[a("li",[t._v("只能作为模块顶层的语句出现")]),t._v(" "),a("li",[t._v("import 的模块名只能是字符串常量")]),t._v(" "),a("li",[t._v("import binding 是 immutable 的")])]),t._v(" "),a("p",[t._v("ES6 模块依赖关系是确定的，和运行时的状态无关，可以进行可靠的静态分析，这就是 tree-shaking 的基础。")]),t._v(" "),a("p",[t._v("为了不影响功能，tree-shaking 只处理函数和顶层的 import/export 变量，不能把没用到的类的方法消除掉。")]),t._v(" "),a("p",[t._v("使用 babel 插件 "),a("code",[t._v("babel-preset-env")]),t._v(" 时，它默认会将模块打包成 commonjs，这样就会让 tree-shaking 失效了。需要修改配置。")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token property"}},[t._v('"presets"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),a("span",{attrs:{class:"token string"}},[t._v('"env"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v('"modules"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n      "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}],!1,null,null,null);e.options.__file="webpack4笔记.md";s.default=e.exports}}]);